[{"content":"Now that I have custom tasks for building and serving my Hugo site in Visual Studio Code, I wanted to create posts quickly without having to remember the hugo command. So, this is what I did:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  { \u0026#34;version\u0026#34;: \u0026#34;2.0.0\u0026#34;, \u0026#34;tasks\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;New Post\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;shell\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;title=\\\u0026#34;${input:title}\\\u0026#34; \u0026amp;\u0026amp; slug=\\\u0026#34;${title// /-}\\\u0026#34; \u0026amp;\u0026amp; hugo new content/post/${slug,,}/index.md --source ./src\u0026#34;, \u0026#34;problemMatcher\u0026#34;: [] } ], \u0026#34;inputs\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;title\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Enter the title of the new post\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;promptString\u0026#34; } ] }   The Variable Substitution section of the Visual Studio docs provides information on getting input from the user.\nFirst, I defined the inputs by providing the id, description, and type. Then the most interesting part:\nThe command:\n1  title=\u0026#34;${input:title}\u0026#34; \u0026amp;\u0026amp; slug=\u0026#34;${title// /-}\u0026#34; \u0026amp;\u0026amp; hugo new content/post/${slug,,}/index.md --source ./src   does three (3) things using bash:\n  Save the input text into a variable named title\n1  title=\u0026#34;${input:title}\u0026#34;     Replace spaces in the title variable with dashes and store the output in another variable named slug:\n1  slug=\u0026#34;${title// /-}\u0026#34;     Execute hugo command to create the content file:\n1  hugo new content/post/${slug,,}/index.md --source ./src   This last command converts the contents of the slug variable to lowercase. Pretty neat!\n  So far I\u0026rsquo;m pretty pleased with my experience with the Hugo static site generator.\n","date":"2022-03-17T18:39:12Z","image":"https://www.chingono.com/blog/2022/03/17/defining-task-quickly-creating-hugo-posts-vscode/cover_hub8e99cfaeac9e6974b03f6aa110414f0_82550_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.chingono.com/blog/2022/03/17/defining-task-quickly-creating-hugo-posts-vscode/","title":"Defining A Task for Quickly Creating Hugo Posts In Visual Studio Code"},{"content":"Now that I can run the site locally, I needed a quick way to run the hugo command for creating new blog posts. After quick search on the internet, I found the article Tasks in Visual Studio Code very helpful. In short, I had to define the build task this way:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  { \u0026#34;version\u0026#34;: \u0026#34;2.0.0\u0026#34;, \u0026#34;tasks\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;Build\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;shell\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;hugo --source ./src\u0026#34;, \u0026#34;group\u0026#34;: { \u0026#34;kind\u0026#34;: \u0026#34;build\u0026#34;, \u0026#34;isDefault\u0026#34;: true } } ] }   This task executes the hugo command which generates your website to the public/ directory by default and makes it ready to be deployed to your web server. The --source argument ensures the correct folder is built. In addition, setting \u0026quot;kind\u0026quot;: \u0026quot;build\u0026quot; and \u0026quot;isDefault\u0026quot;: true ensures that this task is executed with the Ctrl+Shift+Bkeyboard shortcut.\nNext, I added another task to run the site locally:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  { \u0026#34;version\u0026#34;: \u0026#34;2.0.0\u0026#34;, \u0026#34;tasks\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;Build\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;shell\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;hugo --source ./src\u0026#34;, \u0026#34;group\u0026#34;: { \u0026#34;kind\u0026#34;: \u0026#34;build\u0026#34;, \u0026#34;isDefault\u0026#34;: true } }, { \u0026#34;label\u0026#34;: \u0026#34;Serve\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;shell\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;hugo server -D --source ./src\u0026#34;, \u0026#34;group\u0026#34;: { \u0026#34;kind\u0026#34;: \u0026#34;build\u0026#34; }, \u0026#34;isBackground\u0026#34;: true, \u0026#34;problemMatcher\u0026#34;: [] } ] }   This task executes the hugo server command. The -D flag ensures that we can preview content in draft mode, and again, the --source argument ensures the correct folder is served. It\u0026rsquo;s important to note that the Serve does not have \u0026quot;isDefault\u0026quot;: true since we do not want the two tasks to conflict when using the Ctrl+Shift+Bkeyboard shortcut.\nSo far I\u0026rsquo;m pretty pleased with my experience with the Hugo static site generator.\n","date":"2022-03-16T20:44:03Z","image":"https://www.chingono.com/blog/2022/03/16/defining-tasks-quickly-building-serving-hugo-site/cover_hu853181193b62abd8fd8dded5a69822fd_43411_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.chingono.com/blog/2022/03/16/defining-tasks-quickly-building-serving-hugo-site/","title":"Defining Tasks for Quickly Building and Serving a Hugo Site"},{"content":"  Clone repo in Codespaces\n  Add Hugo devcontainer\n Click the \u0026ldquo;Codespaces\u0026rdquo; button in the bottom-left corner of Visual Studio Code Click \u0026ldquo;Add Development Container Configuration Files\u0026rdquo; Click \u0026ldquo;Show All Definitions\u0026rdquo; Click \u0026ldquo;Hugo (Community)\u0026rdquo; Click \u0026ldquo;OK\u0026rdquo;    Create new hugo site:\n1  \u0026gt;hugo new site blog     Try to create new hugo module https://docs.stack.jimmycai.com/getting-started\n1 2  \u0026gt;hugo mod init github.com/achingono/achingono.github.io Error: failed to init modules: binary with name \u0026#34;go\u0026#34; not found     Add go binary to devcontainer docker file\n1 2 3 4 5 6 7 8 9 10  # GO versionARG GO_VERSION=18 #Download GoRUN wget https://golang.org/dl/go1.${GO_VERSION}.linux-amd64.tar.gz \u0026amp;\u0026amp; \\  tar -C /usr/local -xzf go1.${GO_VERSION}.linux-amd64.tar.gz \u0026amp;\u0026amp; \\  rm go1.${GO_VERSION}.linux-amd64.tar.gzENV GOPATH /goENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH    Check go version\n1 2  \u0026gt;go version go version go1.18 linux/amd64     Turn new site into a Hugo module:\n1 2 3 4  \u0026gt;hugo mod init github.com/achingono/achingono.github.io go: creating new go.mod: module github.com/achingono/achingono.github.io go: to add module requirements and sums: go mod tidy     Declare the hugo-theme-stack module as a dependency of your site:\n1 2 3 4  \u0026gt;hugo mod get github.com/CaiJimmy/hugo-theme-stack/v3 go: downloading github.com/CaiJimmy/hugo-theme-stack/v3 v3.10.0 go: downloading github.com/CaiJimmy/hugo-theme-stack v2.6.0+incompatible go: added github.com/CaiJimmy/hugo-theme-stack/v3 v3.10.0     Grab config file from example site\n1  \u0026gt;wget https://raw.githubusercontent.com/CaiJimmy/hugo-theme-stack/master/exampleSite/config.yaml     Update config.yaml file\n  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  baseurl:https://achingono.github.iolanguageCode:en-ustheme:github.com/CaiJimmy/hugo-theme-stack/v3paginate:5title:Alfero Chingonolanguages:en:languageName:Englishtitle:Alfero Chingonoweight:1# Change it to your Disqus shortname before usingdisqusShortname:achingono# GA Tracking IDgoogleAnalytics:# Theme i18n support# Available values: en, fr, id, ja, ko, pt-br, zh-cn, zh-tw, es, de, nl, it, th, el, uk, arDefaultContentLanguage:en# Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko]# This will make .Summary and .WordCount behave correctly for CJK languages.hasCJKLanguage:falsepermalinks:post:/blog/:slug/page:/:slug/...module:# uncomment line below for temporary local development of module# replacements: \u0026#34;github.com/CaiJimmy/hugo-theme-stack/v3 -\u0026gt; ../../hugo-theme-stack\u0026#34;imports:- path:github.com/CaiJimmy/hugo-theme-stack/v3disable:false  Delete config.toml file Create new post Run hugo server -D Browse to http://127.0.0.1:1313  ","date":"2022-03-15T00:00:00Z","image":"https://www.chingono.com/blog/2022/03/15/hugo-blog-powered-by-github-pages-codespaces/cover_hu5e91b4f7e7a4ba6ba63ef7778b07ef87_84336_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.chingono.com/blog/2022/03/15/hugo-blog-powered-by-github-pages-codespaces/","title":"Hugo blog powered by GitHub Pages and GitHub Codespaces"}]